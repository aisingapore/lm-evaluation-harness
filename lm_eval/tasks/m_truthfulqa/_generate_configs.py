from pathlib import Path

import datasets
import yaml
from tqdm import tqdm

CWD = Path(__file__).resolve().parent
MC1_FILE = "m_truthfulqa_mc1_{lang}.yaml"
MC2_FILE = "m_truthfulqa_mc2_{lang}.yaml"

def main():
    dataset_name = "liyier90/m_truthfulqa"
    tasks = ["vi", "zh"]
    #  for task in tqdm(datasets.get_dataset_infos(dataset_name).keys()):
    for task in tqdm(tasks):
        mc1_task_name = f"{dataset_name.split('/')[-1]}_mc1_{task}"
        mc2_task_name = f"{dataset_name.split('/')[-1]}_mc2_{task}"
        with open(CWD / MC1_FILE.format(lang=task), "w") as outfile:
            outfile.write("# Generated by _generate_configs.py\n")
            yaml.dump(
                {
                    "include": "_m_truthfulqa_mc1_yaml",
                    "group": [f"m_truthfulqa_{task}"],
                    "task": mc1_task_name,
                    "dataset_name": task,
                },
                outfile,
            )
        with open(CWD / MC2_FILE.format(lang=task), "w") as outfile:
            outfile.write("# Generated by _generate_configs.py\n")
            yaml.dump(
                {
                    "include": "_m_truthfulqa_mc2_yaml",
                    "group": [f"m_truthfulqa_{task}"],
                    "task": mc2_task_name,
                    "dataset_name": task,
                },
                outfile,
            )


if __name__ == "__main__":
    main()
